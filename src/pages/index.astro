---
import Layout from '../layouts/Layout.astro';
import ArgumentCard from '../components/ArgumentCard.svelte';

const marketingArgs = [
  {
    emoji: "üîç",
    title: "Explore Your Sexuality",
    description: "Safe space for personal discovery and exploration",
    buttonText: "Learn More"
  },
  {
    emoji: "‚ú®",
    title: "Fulfill Your Desires",
    description: "Experience your dreams in a controlled environment",
    buttonText: "Discover"
  },
  {
    emoji: "üéØ",
    title: "Practice Makes Perfect",
    description: "Gain confidence and experience",
    buttonText: "Start Now"
  },
  {
    emoji: "üîí",
    title: "100% Private",
    description: "Your privacy is our absolute priority",
    buttonText: "Privacy Info"
  },
  {
    emoji: "üíù",
    title: "Your Wellbeing First",
    description: "Professional team dedicated to your comfort",
    buttonText: "Meet Team"
  },
  {
    emoji: "üåü",
    title: "Discover Joy",
    description: "Experience new heights of pleasure",
    buttonText: "Begin Journey"
  }
];
---

<Layout title="ConnectMe">
  <main class="min-h-screen bg-gradient-to-r from-purple-600 to-blue-600 w-full flex flex-col">
    <!-- Navigation -->
    <nav class="sticky top-0 z-50 backdrop-blur-md bg-purple-600/70 p-4 md:p-6">
      <div class="container mx-auto flex justify-between items-center">
        <div class="text-white text-xl md:text-2xl font-bold">ConnectMe</div>
        <div class="flex items-center gap-3 md:gap-6">
          <a
            href="https://www.snapchat.com/add/YOUR_SNAPCHAT"
            target="_blank"
            rel="noopener noreferrer"
            class="text-white hover:text-yellow-400 transition-colors duration-300"
            aria-label="Follow on Snapchat"
          >
            <svg class="w-6 h-6 md:w-8 md:h-8" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12.206.793c.99 0 4.347.276 5.93 3.821.529 1.193.403 3.219.299 4.847l-.003.06c-.012.18-.022.345-.03.51.075.045.203.09.401.09.3-.016.659-.12 1.033-.301.165-.088.344-.104.464-.104.182 0 .359.029.509.09.45.149.734.479.734.838.015.449-.39.839-1.213 1.168-.089.029-.209.075-.344.119-.45.135-1.139.36-1.333.81-.09.224-.061.524.12.868l.015.015c.06.136 1.526 3.475 4.791 4.014.255.044.435.27.42.509 0 .075-.015.149-.045.225-.24.569-1.273.988-3.146 1.271-.059.091-.12.375-.164.57-.029.179-.074.36-.134.553-.076.271-.27.405-.555.405h-.03c-.135 0-.313-.031-.538-.074-.36-.075-.765-.135-1.273-.135-.3 0-.599.015-.913.074-.6.104-1.123.464-1.723.884-.853.599-1.826 1.288-3.294 1.288-.06 0-.119-.015-.18-.015h-.149c-1.468 0-2.427-.675-3.279-1.288-.599-.42-1.107-.779-1.707-.884-.314-.045-.629-.074-.928-.074-.54 0-.958.089-1.272.149-.211.043-.391.074-.54.074-.374 0-.523-.224-.583-.42-.061-.192-.09-.389-.135-.567-.046-.181-.105-.494-.166-.57-1.918-.222-2.95-.642-3.189-1.226-.031-.063-.052-.15-.055-.225-.015-.243.165-.465.42-.509 3.264-.54 4.73-3.878 4.791-4.02l.016-.029c.18-.345.224-.645.119-.869-.195-.434-.884-.658-1.332-.809-.121-.029-.24-.074-.346-.119-1.107-.435-1.257-.93-1.197-1.273.09-.479.674-.793 1.168-.793.146 0 .27.029.383.074.42.194.789.3 1.104.3.234 0 .384-.06.465-.105l-.046-.569c-.098-1.626-.225-3.651.307-4.837C7.392 1.077 10.739.807 11.727.807l.419-.015h.06z"/>
            </svg>
          </a>
          <button class="nav-cta">
            Connect Now
          </button>
        </div>
      </div>
    </nav>

    <!-- Hero Section -->
    <section class="container mx-auto px-4 py-8 md:py-12 lg:py-16 flex-grow">
      <div class="text-center max-w-4xl mx-auto mb-12 md:mb-16">
        <h1 class="text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold text-white mb-6">
          Discover Your Journey
        </h1>
        <p class="text-lg md:text-xl lg:text-2xl text-white/90">
          Experience genuine connections in a safe, judgment-free environment
        </p>
      </div>

      <!-- Cards Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 lg:gap-8 max-w-7xl mx-auto">
        {marketingArgs.map((arg) => (
          <div class="h-full transform hover:scale-105 transition-transform duration-300">
            <ArgumentCard
              client:load
              {...arg}
            />
          </div>
        ))}
      </div>

      <!-- CTA Section -->
      <div class="mt-12 md:mt-16 lg:mt-20 text-center">
        <button class="main-cta">
          Start Your Journey Now
        </button>
      </div>
    </section>

    <!-- Footer -->
    <footer class="mt-auto py-6 bg-purple-900/20 backdrop-blur-sm">
      <div class="container mx-auto px-4">
        <div class="text-center text-white/60">
          <p class="text-sm md:text-base mb-2">18+ Only ‚Ä¢ Terms Apply ‚Ä¢ Privacy Protected</p>
          <p class="text-xs md:text-sm">&copy; {new Date().getFullYear()} ConnectMe. All rights reserved.</p>
        </div>
      </div>
    </footer>
  </main>
</Layout>

<style>
  /* Base Styles */
  :global(body) {
    @apply m-0 p-0 min-h-screen overflow-x-hidden;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  /* Navigation Styles */
  .nav-cta {
    @apply bg-white text-purple-600;
    @apply px-4 md:px-6 lg:px-8;
    @apply py-2 md:py-2.5 lg:py-3;
    @apply rounded-full;
    @apply text-sm md:text-base lg:text-lg;
    @apply font-semibold;
    @apply transform transition-all duration-300;
    @apply hover:bg-opacity-90 hover:scale-105;
    @apply active:scale-95;
    @apply shadow-md hover:shadow-lg;
  }

  /* Main CTA Button */
  .main-cta {
    @apply bg-white text-purple-600;
    @apply px-6 md:px-8 lg:px-12;
    @apply py-3 md:py-4 lg:py-5;
    @apply rounded-full;
    @apply text-lg md:text-xl lg:text-2xl;
    @apply font-bold;
    @apply transform transition-all duration-300;
    @apply hover:bg-opacity-90 hover:scale-105;
    @apply active:scale-95;
    @apply shadow-lg hover:shadow-xl;
  }

  /* Container */
  .container {
    @apply w-full max-w-7xl mx-auto;
  }

  /* Animations */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Utility Classes */
  .hover\:scale-102:hover {
    transform: scale(1.02);
  }
</style>

<script>
  // Add type annotations for the event listener
  document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener('click', function(this: HTMLAnchorElement, e: MouseEvent) {
      e.preventDefault();
      const href = this.getAttribute('href');
      if (!href) return;
      document.querySelector(href)?.scrollIntoView({
        behavior: 'smooth'
      });
    });
  });

  // Add types for Intersection Observer
  const observer = new IntersectionObserver(
    (entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fadeIn');
        }
      });
    },
    { threshold: 0.1 }
  );

  // Add type for card elements
  document.querySelectorAll<HTMLElement>('.card').forEach((card) => {
    observer.observe(card);
  });
</script>
